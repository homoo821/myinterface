{"name": "test_add_teacher[test_data0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'TestHttp' object has no attribute 'assertEqual'", "trace": "self = <test_case.test_add_teacher_pytest.TestHttp object at 0x09BB02D0>\ntest_data = {'ID': 1, 'data': '{\"username\":\"auto\",\"password\":\"sdfsdfsdf\"}', 'exp': 0, 'header': '{\"Content-Type\":\"application/x-ww...harm-df2c00ac=f0bfa5fa-bf37-4140-9195-bc4a322fc2a1; goSessionid=j5wML4oBLTKoE18Y9aOkEN6IOYNK0vPEkYIorE-MZz8%3D\"}', ...}\n\n    @pytest.mark.parametrize(\"test_data\", test_data)\n    def test_add_teacher(self, test_data):\n        UserLog().info('/*开始->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        r = HttpRequest().http_request(test_data['url'], eval(test_data[\"header\"]), eval(test_data['data']), test_data['method'], getattr(GetData,'Cookie'))\n        UserLog().info('/*结束->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        if r.cookies:\n            setattr(GetData, 'Cookie', r.cookies)\n        ReadExcel().writ_back(test_data_path, test_data['sheet_name'], int(test_data['ID'])+1, 'res', str(r.json()))\n        print(r.json())\n        try:\n            self.assertEqual(r.json()['retcode'], test_data['exp'])\n            testresult = 'Pass'\n        except Exception as e:\n            testresult = 'Fail'\n            print(e)\n>           raise e\n\ntest_case\\test_add_teacher_pytest.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_case.test_add_teacher_pytest.TestHttp object at 0x09BB02D0>\ntest_data = {'ID': 1, 'data': '{\"username\":\"auto\",\"password\":\"sdfsdfsdf\"}', 'exp': 0, 'header': '{\"Content-Type\":\"application/x-ww...harm-df2c00ac=f0bfa5fa-bf37-4140-9195-bc4a322fc2a1; goSessionid=j5wML4oBLTKoE18Y9aOkEN6IOYNK0vPEkYIorE-MZz8%3D\"}', ...}\n\n    @pytest.mark.parametrize(\"test_data\", test_data)\n    def test_add_teacher(self, test_data):\n        UserLog().info('/*开始->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        r = HttpRequest().http_request(test_data['url'], eval(test_data[\"header\"]), eval(test_data['data']), test_data['method'], getattr(GetData,'Cookie'))\n        UserLog().info('/*结束->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        if r.cookies:\n            setattr(GetData, 'Cookie', r.cookies)\n        ReadExcel().writ_back(test_data_path, test_data['sheet_name'], int(test_data['ID'])+1, 'res', str(r.json()))\n        print(r.json())\n        try:\n>           self.assertEqual(r.json()['retcode'], test_data['exp'])\nE           AttributeError: 'TestHttp' object has no attribute 'assertEqual'\n\ntest_case\\test_add_teacher_pytest.py:28: AttributeError"}, "attachments": [{"name": "log", "source": "fb0b9ba7-ece1-4fb1-a553-13ed5f4ca485-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "2f96ec23-7880-4af2-8ae9-2a41fc8d00dd-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "918b7f98-53a6-4764-8232-916de71ccd0a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_data", "value": "{'ID': 1, 'title': '正常登录', 'mode': 'login', 'method': 'post', 'url': 'http://localhost/api/mgr/loginReq', 'header': '{\"Content-Type\":\"application/x-www-form-urlencoded; charset=UTF-8\",\"Cookie\":\"Pycharm-df2c00ac=f0bfa5fa-bf37-4140-9195-bc4a322fc2a1; goSessionid=j5wML4oBLTKoE18Y9aOkEN6IOYNK0vPEkYIorE-MZz8%3D\"}', 'data': '{\"username\":\"auto\",\"password\":\"sdfsdfsdf\"}', 'exp': 0, 'res': None, 'testresult': None, 'sheet_name': 'add_teacher'}"}], "start": 1596632831689, "stop": 1596632832192, "uuid": "b7722c54-7549-4c01-b77c-8bb9cbf2a59c", "historyId": "0d362ac5aa067876b1866bd80039f003", "testCaseId": "2452cc6c6d90d5e5efb2c039237a94b6", "fullName": "test_case.test_add_teacher_pytest.TestHttp#test_add_teacher", "labels": [{"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_add_teacher_pytest"}, {"name": "subSuite", "value": "TestHttp"}, {"name": "host", "value": "PC-20181102DJCG"}, {"name": "thread", "value": "8240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_add_teacher_pytest"}]}