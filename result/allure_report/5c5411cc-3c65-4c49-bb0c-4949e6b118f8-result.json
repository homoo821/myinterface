{"name": "test_add_teacher[test_data1]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <test_case.test_add_teacher_pytest.TestHttp object at 0x09BD5770>\ntest_data = {'ID': 2, 'data': '{\"action\":\"add_teacher\",\"data\":{\"username\":\"teacher_9\",\"courses\":[{\"id\":26,\"name\":\"语文\"}],\"realname\"...harm-df2c00ac=f0bfa5fa-bf37-4140-9195-bc4a322fc2a1; goSessionid=j5wML4oBLTKoE18Y9aOkEN6IOYNK0vPEkYIorE-MZz8%3D\"}', ...}\n\n    @pytest.mark.parametrize(\"test_data\", test_data)\n    def test_add_teacher(self, test_data):\n        UserLog().info('/*开始->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        r = HttpRequest().http_request(test_data['url'], eval(test_data[\"header\"]), eval(test_data['data']), test_data['method'], getattr(GetData,'Cookie'))\n        UserLog().info('/*结束->ID:{0},标题:{1}*/'.format(test_data['ID'],test_data['title']))\n        if r.cookies:\n            setattr(GetData, 'Cookie', r.cookies)\n>       ReadExcel().writ_back(test_data_path, test_data['sheet_name'], int(test_data['ID'])+1, 'res', str(r.json()))\n\ntest_case\\test_add_teacher_pytest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Python\\lib\\site-packages\\requests\\models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\Python\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\n..\\..\\Python\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x021E33F0>\ns = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <...      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\Python\\lib\\json\\decoder.py:357: JSONDecodeError"}, "attachments": [{"name": "log", "source": "90829dd6-d4a7-402e-87e0-f69f41520f4d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "aab63214-e8e2-4bf2-943e-374998fe80d8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_data", "value": "{'ID': 2, 'title': '正常创建', 'mode': 'addteacher', 'method': 'post', 'url': 'http://localhost/api/mgr/sq_mgr/', 'header': '{\"Content-Type\":\"application/x-www-form-urlencoded; charset=UTF-8\",\"Cookie\":\"Pycharm-df2c00ac=f0bfa5fa-bf37-4140-9195-bc4a322fc2a1; goSessionid=j5wML4oBLTKoE18Y9aOkEN6IOYNK0vPEkYIorE-MZz8%3D\"}', 'data': '{\"action\":\"add_teacher\",\"data\":{\"username\":\"teacher_9\",\"courses\":[{\"id\":26,\"name\":\"语文\"}],\"realname\":\"teacher_9\",\"desc\":\"老师9\",\"display_idx\":1,\"password\":\"sq888\"}}', 'exp': 0, 'res': None, 'testresult': None, 'sheet_name': 'add_teacher'}"}], "start": 1596632832755, "stop": 1596632833003, "uuid": "a2be54c0-b494-473c-8de9-84056ef1d301", "historyId": "ba8c42753cc4b08404269bba60f0f8a7", "testCaseId": "2452cc6c6d90d5e5efb2c039237a94b6", "fullName": "test_case.test_add_teacher_pytest.TestHttp#test_add_teacher", "labels": [{"name": "tag", "value": "usefixtures"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_add_teacher_pytest"}, {"name": "subSuite", "value": "TestHttp"}, {"name": "host", "value": "PC-20181102DJCG"}, {"name": "thread", "value": "8240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_add_teacher_pytest"}]}